Docker: It is an open source tool or platform for building, deploying and managing containerized application.

Docker Image: a package

Container: A way to package application with all the necessary dependencies and configuration.

	VM			|		Docker/Container
				|
Hardware level process isolation	|	OS level process isolation
Each VM has seperate OS		|	Each container can share OS
Boots in minutes			|	Boot procedure takes only few seconds
More resource usage		|	Less resource usage

Ques: Create three websites using httpd image and host in on port 9000,9010,9020. Then the content of first html page should be your name,second should be PRN and third should be your course name.

Ques1: Create a container of debian image take the shell of that container update the package then delete that container.
Ques2: Create three nginx container running on port 7000,7001,7002. name the container as lab1,lab2,lab3. Create index.html for three websites. Copy these files inside the container and check if the website displays your webpage.

***********************************************************************************************************************************

03/12/2022

Create a network adapter test
Create a container with httpd
Create a container with ubuntu
Access ubuntu and update and upgrade packages
Install curl

#docker create network test
#docker run --name lab1 -p 8000:80 -d httpd
#docker pull ubuntu:20.04
#docker run --name c1 -ti -d ubuntu:20.04

Now interactive shell will open of ubuntu image

#apt-get update
#apt-get upgrade
#apt-get install curl

#curl http:/172.17.0.2		(for accessing http container)

Again create a container with http image

#mkdir website
#echo My webpage > index.html
#docker run --name data -p 8001:80 -d -v /root/website/:/usr/local/apache2/htdocs

Now open the shell of container Ubuntu i.e c1

#docker start c1
#docker attach c1

#curl http://172.18.0.4/
#curl http://data/

Ques: Create a new network by name ditiss. Create two containers httpd and ubuntu. In httpd container provide the content using docker volume and host it on ubuntu container as well as base machine. take port 9500 for base machine

***********************************************************************************************************************************


Docker Compose

for docker compose install packages
#yum install epel-release.noarch
#yum install python* -y
#yum install docker-compose
#docker-compose -v
#docker-compose -f lab01.yaml up -d
#docker-compose -f lab01.yaml down

#vim lab01.yaml

version: '3'
services:
    web1:
      image: httpd
      ports:
        - 9000:80
    web2:
      image: nginx
      ports:
        - 9001:80
      volumes:
        - /root/website/:usr/share/nginx/html/
    c1:
      image: ubuntu:20.04
      tty: true

tty tells docker to allocate a virtual terminal session within a container.

Ques: Create four containers using docker-compose.
	- first container for httpd (default webpage)
	- second container for nginx (your own webpage)
	- third container for debian
	- fourth container for centOS
	Then remove all four containers.

***********************************************************************************************************************************

05/12/2022

To attach a network to docker-compose

version: '3'
services:
    web1:
      image: httpd
      networks:
        - ditiss_lab1
      ports:
        - 9000:80
    web2:
      image: nginx
      networks:
        - ditiss_lab1
      ports:
        - 9001:80
      volumes:
        - /root/website/:/usr/share/nginx/html/
    c1:
      image: ubuntu:20.04
      networks:
        - ditiss_lab1
      stdin_open: true
      tty: true
    c2:
      image: centos
      networks:
        - ditiss_lab1
      stdin_open: true
      tty: true

networks:
      ditiss_lab1:
        external: true

stdin_open tells the docker to make the allocated virtual terminal interactive.

*********************************************************************************************************************************************************************************************************************************

06/12/2022

DOCKERFILE
	Dockerfile can build customized image automatically by reading the instructions.
	Docker file will create only one image and name of the file should be "Dockerfile"

#nano Dockerfile
FROM ubuntu:20.04
RUN apt update -y
RUN apt upgrade -y
RUN apt-get install python3 -y
RUN mkdir /app
COPY first.py /app/
CMD ["python3", "/app/first.py"]

#docker build -t <myappname>:<version-name> eg. docker build -t myapp:1.0

docker run --name <container name> -ti <you image name>:<latest version>		(-ti is used to take interactive shell for user input)

Ques: Create python container of swapping two numbers using docker file.
Ques: Create python application/container of addition of two numbers with user input.


#mkdir app1		(in base macihne)
#cd app1
#vim python.py
#vim Dockerfile

FROM ubuntu:20.04
RUN apt update -y
RUN apt upgrade -y
RUN apt-get install python3 -y
RUN mkdir /app
COPY first.py /app/
CMD ["python3", "/app/first.py"]

#docker build -t <image name>:<version name> <path>

#docker run --name app1 -ti <image name>:<version name>


Push images to DOCKER HUB

#docker login

#docker tag <oldimage>:<tagname> <username/reponame>:<tagname>		(tag is used to rename)
#docker push <username/reponame>:<tagname>

#docker save <image_name> > myweb.tar
#docker load < myweb.tar

Ques: Take two CentOS machines. 
	CentOS_1 will be used for one html file from base machine to github.
	In CentOS_2 fetch the html file from github to CentOS. Install the service of docker inside CentOS_2 and create container of that html application using Dockerfile and push to Docker HUB.

*********************************************************************************************************************************************************************************************************************************

07/12/2022

Docker Swarm :
-A docker swarm is a container orchestration (cluster management) tool running the docker application.
-In a docker swarm there are typically several worker nodes and one manager node that is responsible for handling the worker nodes through a process that can be described as automated load  balancing.

Take three machines

Install and start docker in all three machines
#setenforce 0 in all three machines

In master machine 
#docker swarm inti --advertise-addr <master IP>

a token will be generated...copy that

docker swarm join --token SWMTKN-1-47erpbysh7sb7rjncqswl0in3dism958q5akfkld5hgv10d7yd-58dvonlv9jov5d84kj452a30m 192.168.93.128:2377

#vim join-token

paste the join token save and exit

now change the permission and provide executable permission  to user
#chmod u+x join-token
#which ssh
#scp join-token <node1 IP>:/tmp/
##scp join-token <node2 IP>:/tmp/`

#ls -ll /tmp
allow port 2377/tcp in firewall in master machine only for worker nodes to join in manager node
#docker service ls
#docker service create --name lab1 --replicas 1 -p 8000:80 httpd:latest

#docker service scale lab1=3

*********************************************************************************************************************************************************************************************************************************

08/12/2022

#docker service create --name web1 --replicas 1 -p 9000:80 httpd:latest

#docker service scale web1=6

Ques: Create one service of nginx and this service is running on 9500.
	-create replica upto 1
	-increase the scale upto 10
	-decrease the scale upto 3
	-delete the service

Creating your own image and hosting it via docker swarm.

#mkdir website
#vim Dockerfile
FROM httpd
COPY index.html /usr/local/apache2/htdocs/
#docker build -t myapp:1.0 .
#docker login
#docker tag myapp:1.0 susgao/docker
#docker push susgao/docker
#docker service create --name web1 --replicas 2 -p 8000:80 susgao/docker

#docker service update --image susgao/docker:2.0 web1

Ques: Create one html application. With the help of that application create containers using docker swarm (scale=5). Then add some content in html application and update the service in docker swarm and host the webpage on browser.


*********************************************************************************************************************************************************************************************************************************

09/12/2022

Ques: Take one application from  github repository and create one image in master node. Using that create one service with three replicas.
	-modify the application and update the same service

Ques: expiri

Ques: Fetch html application from github in master node. Create service for that. Run the application on 8800 and create replicas 5 of that application and host the application.
	-Scale the application upto 20
	-Update the application and host it.
	-Delete the service

Certificates:
Certified k8s administration/administrator
ITIL certification
Cloud practioner/AWS solution architect
AWS Sysops

Free:
Azure Fundamentals
Udemy - Scott Duffy AZ900, Stephen Marrick - AWS solution architect, CCSP - CEH - CISSP (ENPT - Adam Heath)